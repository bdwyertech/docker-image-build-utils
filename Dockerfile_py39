FROM python:3.9-alpine3.21

ARG BUILD_DATE
ARG VCS_REF

LABEL org.opencontainers.image.title="image-build-utils" \
    org.opencontainers.image.authors="Brian Dwyer <bdwyertech@github.com>" \
    org.opencontainers.image.source="https://github.com/bdwyertech/docker-image-build-utils.git" \
    org.opencontainers.image.revision=$VCS_REF \
    org.opencontainers.image.created=$BUILD_DATE \
    org.label-schema.vcs-ref=$VCS_REF \
    org.label-schema.vcs-url="https://github.com/bdwyertech/docker-image-build-utils.git"

# Update PIP & Install PIPEnv
RUN python -m pip install --upgrade pip \
    && python -m pip install --upgrade pipenv \
    && rm -rf ~/.cache/pip

# Update & Install Ruby
RUN apk update && apk upgrade \
    && apk add --no-cache bash ca-certificates curl git ruby ruby-etc ruby-json wget \
    && echo 'gem: --no-document' > /etc/gemrc

# Install Berkshelf
RUN apk add --no-cache --virtual .build-deps ruby-dev build-base linux-headers \
    && gem install public_suffix -v 5.1.1 \
    && gem install nori -v 2.6.0 \
    && gem install chef -v 17.10.0 \
    && gem install berkshelf \
    && apk del .build-deps \
    && rm -rf ~/.gem

# Trivy
ARG TARGETPLATFORM=linux/amd64
RUN DOCKER_ARCH=$(case ${TARGETPLATFORM} in \
    "linux/amd64")   echo -e "Linux-64bit" ;; \
    "linux/arm64")   echo -e "Linux-ARM64" ;; \
    *)               echo "" ;; esac) \
    && (curl -sfkL "$(curl -Ls https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E "https://.+?_${DOCKER_ARCH}.tar.gz" -m 1)" | tar zxf - --directory /usr/local/bin)

# Hide Ruby Warnings
ENV RUBYOPT='-W0'
